[project]
name = "ghtopdep"
dynamic = ["version"]
description = "CLI tool for sorting dependents repositories and packages by stars"
authors = [
    {name = "Andriy Orehov", email = "andriyorehov@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["github", "dependencies", "cli", "stars", "sorting", "dependents", "analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Environment :: Console",
    "Operating System :: OS Independent",
]

dependencies = [
    "selectolax>=0.3.7,<0.4.0",
    "tabulate>=0.8.3,<0.9.0",
    "click>=8.1.2,<9.0.0",
    "requests>=2.22,<3.0.0",
    "github3-py>=4.0.1,<5.0.0",
    "appdirs>=1.4.4,<2.0.0",
    "cachecontrol[filecache]>=0.14.0,<0.15.0",
    "tqdm>=4.66.4,<5.0.0",
]

[project.urls]
Source = "https://github.com/j7an/ghtopdep"
"Bug Tracker" = "https://github.com/j7an/ghtopdep/issues"
Homepage = "https://github.com/j7an/ghtopdep"
Documentation = "https://github.com/j7an/ghtopdep#readme"

[project.scripts]
ghtopdep = "ghtopdep.cli:cli"

[dependency-groups]
dev = [
    "better-exceptions>=0.2.2,<0.3.0",
    "pysnooper>=0.3.0,<0.4.0",
    "pytest>=8.0.0,<9.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "responses>=0.24.0,<1.0.0",
    "vcrpy>=5.1.0,<6.0.0",
    "ruff>=0.1.0,<1.0.0",
    "mypy>=1.8.0,<2.0.0",
    "pre-commit>=3.6.0,<4.0.0",
    "types-requests>=2.31.0,<3.0.0",
    "types-tabulate>=0.9.0,<1.0.0",
    "types-tqdm>=4.66.0,<5.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=ghtopdep --cov-report=html --cov-report=term-missing --cov-fail-under=80"
filterwarnings = [
    "ignore::DeprecationWarning",
]
# Suppress DEBUG logs from dependencies when running with --log-cli-level
log_cli_level = "INFO"
log_level = "INFO"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_cli_format = "%(levelname)s %(message)s"

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "\\.\\.\\.",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true  # Require type hints on all functions
ignore_missing_imports = false
strict = false  # Keep false for now, enable individual checks incrementally
explicit_package_bases = true
namespace_packages = true
# Incremental strict mode options
warn_unused_ignores = true
warn_redundant_casts = true
check_untyped_defs = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["appdirs", "github3", "vcr"]
ignore_missing_imports = true

[tool.ruff]
line-length = 88  # Community standard (matches Black default)
target-version = "py311"  # Match project's minimum Python version
fix = true  # Auto-fix issues when possible
show-fixes = true  # Show what was fixed

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # Pyflakes (undefined variables, unused imports)
    "I",   # isort (import sorting)
    "N",   # pep8-naming (naming conventions)
    "UP",  # pyupgrade (modern Python syntax)
    "S",   # flake8-bandit (security issues) - CRITICAL for ghtopdep
    "B",   # flake8-bugbear (bug-prone patterns)
    "A",   # flake8-builtins (shadowing built-in names)
    "C4",  # flake8-comprehensions (better comprehensions)
    "T20", # flake8-print (catch debug print statements)
]

# Ignore rules that conflict with ruff formatter or are not applicable
ignore = [
    "E501",  # line-too-long (formatter handles this)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101"]  # Allow assert statements in tests (pytest convention)

[tool.ruff.lint.isort]
known-first-party = ["ghtopdep"]

[tool.ruff.format]
quote-style = "double"  # Matches existing code style
indent-style = "space"
docstring-code-format = true  # Format code blocks in docstrings

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "ghtopdep/__version__.py"

[tool.hatch.build.targets.wheel]
packages = ["ghtopdep"]
